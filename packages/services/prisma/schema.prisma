// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum EntityType {
    person
    animal
}

enum Gender {
    male
    female
    other
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    entities      Entity[]

    auth_provider String @default("password")
    auth_value    String

    @@map("users")
}

model Entity {
    id String @id @default(cuid())

    type        EntityType
    name        String
    description String     @db.Text

    date_created DateTime  @default(now())
    date_updated DateTime  @updatedAt
    date_found   DateTime?

    id_user_created String

    user_created User            @relation(fields: [id_user_created], references: [id], onDelete: Cascade)
    pictures     EntityPicture[]
    addresses    EntityAddress[]
    data         EntityData?

    @@map("entities")
}

model EntityData {
    id String @id @default(cuid())

    age    Int
    race   String
    gender Gender

    id_entity String @unique

    entity Entity @relation(fields: [id_entity], references: [id])

    @@map("entity_data")
}

model EntityAddress {
    id String @id @default(cuid())

    district String?
    city     String?
    state    String?
    country  String  @default("brazil")

    id_entity String

    entity Entity @relation(fields: [id_entity], references: [id], onDelete: Cascade)

    @@map("entity_addresses")
}

model EntityPicture {
    id String @id @default(cuid())

    url String

    id_entity String

    entity Entity @relation(fields: [id_entity], references: [id], onDelete: Cascade)

    @@map("entity_pictures")
}
