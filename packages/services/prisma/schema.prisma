// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

// ---------------
// #MARK: Enums
// ---------------

enum EntityType {
    person
    animal
}

enum Gender {
    male
    female
    other
}

enum ReportReason {
    offensive
    not_missing
    ownership
    other
}

// ---------------
// #MARK: Base models
// ---------------

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    entities      Entity[]

    auth_provider String @default("password")
    auth_value    String

    reports_created Report[] @relation(name: "user_created")
    reports         Report[] @relation(name: "user")

    @@map("users")
}

// ---------------
// #MARK: Profile related
// ---------------

model Entity {
    id String @id @default(cuid())

    type        EntityType
    name        String
    description String     @db.Text

    date_created     DateTime  @default(now())
    date_updated     DateTime  @updatedAt
    date_disappeared DateTime?
    date_found       DateTime?

    id_user_created String

    user_created User            @relation(fields: [id_user_created], references: [id], onDelete: Cascade)
    pictures     EntityPicture[]
    addresses    EntityAddress[]
    data         EntityData?
    contact      EntityContact?
    Report       Report[]

    @@map("entities")
}

model EntityData {
    id String @id @default(cuid())

    age    Int
    race   String
    gender Gender

    id_entity String @unique

    entity Entity @relation(fields: [id_entity], references: [id], onDelete: Cascade)

    @@map("entity_data")
}

model EntityAddress {
    id String @id @default(cuid())

    district String?
    city     String?
    state    String?
    country  String  @default("brazil")

    id_entity String

    entity Entity @relation(fields: [id_entity], references: [id], onDelete: Cascade)

    @@map("entity_addresses")
}

model EntityPicture {
    id String @id @default(cuid())

    key String @unique
    url String @unique

    id_entity String

    entity Entity @relation(fields: [id_entity], references: [id], onDelete: Cascade)

    @@map("entity_pictures")
}

model EntityContact {
    id String @id @default(cuid())

    description String @default("")
    options     Json   @default("[]")

    id_entity String @unique

    entity Entity @relation(fields: [id_entity], references: [id], onDelete: Cascade)

    @@map("entity_contact")
}

// ---------------
// #MARK: Report
// ---------------

model Report {
    id String @id @default(cuid())

    reason      ReportReason
    description String       @default("")

    id_user_created String?
    id_entity       String?
    id_user         String?

    entity       Entity? @relation(fields: [id_entity], references: [id], onDelete: Cascade)
    user         User?   @relation(name: "user", fields: [id_user], references: [id], onDelete: Cascade)
    user_created User?   @relation(name: "user_created", fields: [id_user_created], references: [id], onDelete: SetNull)

    @@map("reports")
}
